/****************************************************************************\

	NES Emulator
	Copyright (C) 2012-2013  Ivanov Viktor

	This program is free software; you can redistribute it and/or modify
	it under the terms of the GNU General Public License as published by
	the Free Software Foundation; either version 2 of the License, or
	(at your option) any later version.

	This program is distributed in the hope that it will be useful,
	but WITHOUT ANY WARRANTY; without even the implied warranty of
	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	GNU General Public License for more details.

	You should have received a copy of the GNU General Public License along
	with this program; if not, write to the Free Software Foundation, Inc.,
	51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.

\****************************************************************************/

#include "tables.h"

namespace vpnes {

namespace apu {

/* Таблица выхода прямоугольных сигналов */
const double SquareTable[31] = {
	0.0000000, 0.0129492, 0.0255874, 0.0379257, 0.0499746, 0.0617442,
	0.0732442, 0.0844836, 0.0954712, 0.1062150, 0.1167240, 0.1270050,
	0.1370660, 0.1469130, 0.1565540, 0.1659940, 0.1752400, 0.1842980,
	0.1931730, 0.2018720, 0.2103990, 0.2187590, 0.2269570, 0.2349980,
	0.2428860, 0.2506250, 0.2582210, 0.2656760, 0.2729950, 0.2801800,
	0.2872370
};

/* Таблица выхода остальных каналов */
const double TNDTable[203] = {
	0.00000000, 0.00643024, 0.01280800, 0.01913410, 0.02540890, 0.03163320,
	0.03780760, 0.04393260, 0.05000890, 0.05603700, 0.06201750, 0.06795100,
	0.07383800, 0.07967910, 0.08547470, 0.09122550, 0.09693190, 0.10259400,
	0.10821400, 0.11379000, 0.11932400, 0.12481600, 0.13026700, 0.13567700,
	0.14104600, 0.14637500, 0.15166500, 0.15691600, 0.16212800, 0.16730100,
	0.17243700, 0.17753500, 0.18259600, 0.18762100, 0.19260900, 0.19756200,
	0.20247900, 0.20736100, 0.21220800, 0.21702100, 0.22180000, 0.22654500,
	0.23125700, 0.23593600, 0.24058300, 0.24519700, 0.24978000, 0.25433000,
	0.25885000, 0.26333900, 0.26779700, 0.27222500, 0.27662200, 0.28099000,
	0.28532900, 0.28963900, 0.29392000, 0.29817200, 0.30239600, 0.30659200,
	0.31076000, 0.31490200, 0.31901500, 0.32310300, 0.32716300, 0.33119700,
	0.33520500, 0.33918700, 0.34314400, 0.34707500, 0.35098100, 0.35486300,
	0.35871900, 0.36255200, 0.36636000, 0.37014400, 0.37390500, 0.37764200,
	0.38135600, 0.38504600, 0.38871400, 0.39235900, 0.39598200, 0.39958300,
	0.40316200, 0.40671800, 0.41025400, 0.41376800, 0.41726000, 0.42073200,
	0.42418300, 0.42761300, 0.43102200, 0.43441200, 0.43778100, 0.44113000,
	0.44446000, 0.44777000, 0.45106100, 0.45433200, 0.45758500, 0.46081800,
	0.46403300, 0.46722900, 0.47040700, 0.47356600, 0.47670800, 0.47983100,
	0.48293700, 0.48602500, 0.48909600, 0.49214900, 0.49518500, 0.49820400,
	0.50120600, 0.50419200, 0.50716100, 0.51011300, 0.51304900, 0.51596900,
	0.51887200, 0.52176000, 0.52463200, 0.52748800, 0.53032900, 0.53315400,
	0.53596400, 0.53875900, 0.54153900, 0.54430300, 0.54705300, 0.54978900,
	0.55250900, 0.55521600, 0.55790700, 0.56058500, 0.56324900, 0.56589800,
	0.56853400, 0.57115600, 0.57376400, 0.57635800, 0.57894000, 0.58150700,
	0.58406200, 0.58660300, 0.58913100, 0.59164700, 0.59414900, 0.59663900,
	0.59911600, 0.60158100, 0.60403300, 0.60647200, 0.60890000, 0.61131500,
	0.61371800, 0.61610900, 0.61848800, 0.62085500, 0.62321100, 0.62555500,
	0.62788700, 0.63020800, 0.63251800, 0.63481600, 0.63710300, 0.63937900,
	0.64164300, 0.64389700, 0.64614000, 0.64837200, 0.65059300, 0.65280400,
	0.65500400, 0.65719300, 0.65937200, 0.66154100, 0.66369900, 0.66584800,
	0.66798600, 0.67011400, 0.67223100, 0.67433900, 0.67643800, 0.67852600,
	0.68060400, 0.68267300, 0.68473300, 0.68678300, 0.68882300, 0.69085400,
	0.69287500, 0.69488800, 0.69689100, 0.69888500, 0.70087000, 0.70284600,
	0.70481300, 0.70677100, 0.70872000, 0.71066000, 0.71259200
};

/* NTSC */

/* Число тактов для каждого шага */
const int NTSC_Tables::StepCycles[6] = {89472, 89472, 89496, 89496, 89424, 89424};

/* Время сброса */
const int NTSC_Tables::ResetCycles[2] = {357960, 447384};

/* Таблица счетчика */
const int NTSC_Tables::LengthCounterTable[32] = {
	0x0a, 0xfe, 0x14, 0x02, 0x28, 0x04, 0x50, 0x06, 0xa0, 0x08, 0x3c, 0x0a,
	0x0e, 0x0c, 0x1a, 0x0e, 0x0c, 0x10, 0x18, 0x12, 0x30, 0x14, 0x60, 0x16,
	0xc0, 0x18, 0x48, 0x1a, 0x10, 0x1c, 0x20, 0x1e
};

/* Таблица формы */
const bool NTSC_Tables::DutyTable[32] = {
	false, true,  false, false, false, false, false, false, false, true,  true,  false,
	false, false, false, false, false, true,  true,  true,  true,  false, false, false,
	true,  false, false, true,  true,  true,  true,  true
};

/* Таблица пилообразной формы */
const int NTSC_Tables::SeqTable[32] = {
	15, 14, 13, 12, 11, 10,  9,  8,  7,  6,  5,  4,  3,  2,  1,  0,
	 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15
};

/* Таблица длин для канала шума */
const int NTSC_Tables::NoiseTable[16] = {
	0x0003, 0x0007, 0x000f, 0x001f, 0x003f, 0x005f, 0x007f, 0x009f,
	0x00c9, 0x00fd, 0x017b, 0x01fb, 0x02f9, 0x03f7, 0x07f1, 0x0fe3
};

/* Таблица длин для ДМ-канала */
const int NTSC_Tables::DMTable[16] = {
	427, 379, 339, 319, 285, 253, 225, 213,
	189, 159, 141, 127, 105,  83,  71,  53
};

/* PAL */

/* Число тактов для каждого шага */
const int PAL_Tables::StepCycles[6] = {8312, 16626, 24938, 33252, 41564, 0};

/* Таблица длин для канала шума */
const int PAL_Tables::NoiseTable[16] = {
	0x0003, 0x0006, 0x000d, 0x001d, 0x003b, 0x0057, 0x0075, 0x0093,
	0x00bb, 0x00eb, 0x0161, 0x01d7, 0x02c3, 0x03af, 0x0761, 0x0ec1
};

/* Таблица длин для ДМ-канала */
const int PAL_Tables::DMTable[16] = {
	397, 353, 315, 297, 275, 235, 209, 197,
	175, 147, 131, 117,  97,  77,  65,  49
};

/* Buggy clones */

/* Таблица формы */
const bool Buggy_Tables::DutyTable[32] = {
	false, true,  false, false, false, false, false, false, false, true,  true,  true,
	true,  false, false, false, false, true,  true,  false, false, false, false, false,
	true,  false, false, true,  true,  true,  true,  true
};

}

namespace ppu {

/* Таблица для преобразования тайлов */
const uint16 ColourTable[256] = {
	0x0000, 0x0001, 0x0004, 0x0005, 0x0010, 0x0011, 0x0014, 0x0015, 0x0040, 0x0041,
	0x0044, 0x0045, 0x0050, 0x0051, 0x0054, 0x0055, 0x0100, 0x0101, 0x0104, 0x0105,
	0x0110, 0x0111, 0x0114, 0x0115, 0x0140, 0x0141, 0x0144, 0x0145, 0x0150, 0x0151,
	0x0154, 0x0155, 0x0400, 0x0401, 0x0404, 0x0405, 0x0410, 0x0411, 0x0414, 0x0415,
	0x0440, 0x0441, 0x0444, 0x0445, 0x0450, 0x0451, 0x0454, 0x0455, 0x0500, 0x0501,
	0x0504, 0x0505, 0x0510, 0x0511, 0x0514, 0x0515, 0x0540, 0x0541, 0x0544, 0x0545,
	0x0550, 0x0551, 0x0554, 0x0555, 0x1000, 0x1001, 0x1004, 0x1005, 0x1010, 0x1011,
	0x1014, 0x1015, 0x1040, 0x1041, 0x1044, 0x1045, 0x1050, 0x1051, 0x1054, 0x1055,
	0x1100, 0x1101, 0x1104, 0x1105, 0x1110, 0x1111, 0x1114, 0x1115, 0x1140, 0x1141,
	0x1144, 0x1145, 0x1150, 0x1151, 0x1154, 0x1155, 0x1400, 0x1401, 0x1404, 0x1405,
	0x1410, 0x1411, 0x1414, 0x1415, 0x1440, 0x1441, 0x1444, 0x1445, 0x1450, 0x1451,
	0x1454, 0x1455, 0x1500, 0x1501, 0x1504, 0x1505, 0x1510, 0x1511, 0x1514, 0x1515,
	0x1540, 0x1541, 0x1544, 0x1545, 0x1550, 0x1551, 0x1554, 0x1555, 0x4000, 0x4001,
	0x4004, 0x4005, 0x4010, 0x4011, 0x4014, 0x4015, 0x4040, 0x4041, 0x4044, 0x4045,
	0x4050, 0x4051, 0x4054, 0x4055, 0x4100, 0x4101, 0x4104, 0x4105, 0x4110, 0x4111,
	0x4114, 0x4115, 0x4140, 0x4141, 0x4144, 0x4145, 0x4150, 0x4151, 0x4154, 0x4155,
	0x4400, 0x4401, 0x4404, 0x4405, 0x4410, 0x4411, 0x4414, 0x4415, 0x4440, 0x4441,
	0x4444, 0x4445, 0x4450, 0x4451, 0x4454, 0x4455, 0x4500, 0x4501, 0x4504, 0x4505,
	0x4510, 0x4511, 0x4514, 0x4515, 0x4540, 0x4541, 0x4544, 0x4545, 0x4550, 0x4551,
	0x4554, 0x4555, 0x5000, 0x5001, 0x5004, 0x5005, 0x5010, 0x5011, 0x5014, 0x5015,
	0x5040, 0x5041, 0x5044, 0x5045, 0x5050, 0x5051, 0x5054, 0x5055, 0x5100, 0x5101,
	0x5104, 0x5105, 0x5110, 0x5111, 0x5114, 0x5115, 0x5140, 0x5141, 0x5144, 0x5145,
	0x5150, 0x5151, 0x5154, 0x5155, 0x5400, 0x5401, 0x5404, 0x5405, 0x5410, 0x5411,
	0x5414, 0x5415, 0x5440, 0x5441, 0x5444, 0x5445, 0x5450, 0x5451, 0x5454, 0x5455,
	0x5500, 0x5501, 0x5504, 0x5505, 0x5510, 0x5511, 0x5514, 0x5515, 0x5540, 0x5541,
	0x5544, 0x5545, 0x5550, 0x5551, 0x5554, 0x5555
};

/* Таблица для преобразования атрибутов */
const uint16 AttributeTable[4] = {
	0x0000, 0x5555, 0xaaaa, 0xffff
};

/* Таблица для быстрого разворота */
const uint8 FlipTable[256] = {
	0x00, 0x80, 0x40, 0xc0, 0x20, 0xa0, 0x60, 0xe0, 0x10, 0x90, 0x50, 0xd0, 0x30,
	0xb0, 0x70, 0xf0, 0x08, 0x88, 0x48, 0xc8, 0x28, 0xa8, 0x68, 0xe8, 0x18, 0x98,
	0x58, 0xd8, 0x38, 0xb8, 0x78, 0xf8, 0x04, 0x84, 0x44, 0xc4, 0x24, 0xa4, 0x64,
	0xe4, 0x14, 0x94, 0x54, 0xd4, 0x34, 0xb4, 0x74, 0xf4, 0x0c, 0x8c, 0x4c, 0xcc,
	0x2c, 0xac, 0x6c, 0xec, 0x1c, 0x9c, 0x5c, 0xdc, 0x3c, 0xbc, 0x7c, 0xfc, 0x02,
	0x82, 0x42, 0xc2, 0x22, 0xa2, 0x62, 0xe2, 0x12, 0x92, 0x52, 0xd2, 0x32, 0xb2,
	0x72, 0xf2, 0x0a, 0x8a, 0x4a, 0xca, 0x2a, 0xaa, 0x6a, 0xea, 0x1a, 0x9a, 0x5a,
	0xda, 0x3a, 0xba, 0x7a, 0xfa, 0x06, 0x86, 0x46, 0xc6, 0x26, 0xa6, 0x66, 0xe6,
	0x16, 0x96, 0x56, 0xd6, 0x36, 0xb6, 0x76, 0xf6, 0x0e, 0x8e, 0x4e, 0xce, 0x2e,
	0xae, 0x6e, 0xee, 0x1e, 0x9e, 0x5e, 0xde, 0x3e, 0xbe, 0x7e, 0xfe, 0x01, 0x81,
	0x41, 0xc1, 0x21, 0xa1, 0x61, 0xe1, 0x11, 0x91, 0x51, 0xd1, 0x31, 0xb1, 0x71,
	0xf1, 0x09, 0x89, 0x49, 0xc9, 0x29, 0xa9, 0x69, 0xe9, 0x19, 0x99, 0x59, 0xd9,
	0x39, 0xb9, 0x79, 0xf9, 0x05, 0x85, 0x45, 0xc5, 0x25, 0xa5, 0x65, 0xe5, 0x15,
	0x95, 0x55, 0xd5, 0x35, 0xb5, 0x75, 0xf5, 0x0d, 0x8d, 0x4d, 0xcd, 0x2d, 0xad,
	0x6d, 0xed, 0x1d, 0x9d, 0x5d, 0xdd, 0x3d, 0xbd, 0x7d, 0xfd, 0x03, 0x83, 0x43,
	0xc3, 0x23, 0xa3, 0x63, 0xe3, 0x13, 0x93, 0x53, 0xd3, 0x33, 0xb3, 0x73, 0xf3,
	0x0b, 0x8b, 0x4b, 0xcb, 0x2b, 0xab, 0x6b, 0xeb, 0x1b, 0x9b, 0x5b, 0xdb, 0x3b,
	0xbb, 0x7b, 0xfb, 0x07, 0x87, 0x47, 0xc7, 0x27, 0xa7, 0x67, 0xe7, 0x17, 0x97,
	0x57, 0xd7, 0x37, 0xb7, 0x77, 0xf7, 0x0f, 0x8f, 0x4f, 0xcf, 0x2f, 0xaf, 0x6f,
	0xef, 0x1f, 0x9f, 0x5f, 0xdf, 0x3f, 0xbf, 0x7f, 0xff
};

}

}
